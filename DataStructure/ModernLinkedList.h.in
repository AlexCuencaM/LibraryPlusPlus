#ifndef MODERN_LINKED_LIST_H
#define MODERN_LINKED_LIST_H
#include <list>
#include <DataStructure/LinkedList.hpp>
using namespace std;
template <typename Data>
class ModernLinkedList: public LinkedList<Data> {
    public:
        list<Data> dataList;
        // Add methods and members as needed
        void InsertAtHead(Data data);
        void Print();
};
template <typename Data>
void ModernLinkedList<Data>::InsertAtHead(Data data)
{
    dataList.push_front(data);
    cout << "Inserted at head: " << endl << data << endl << endl; 
}

template <typename Data>
void ModernLinkedList<Data>::Print()
{
    for (const auto& item : dataList) {
        cout << item << " " << endl << endl; // Assuming Data has an overloaded operator<<
    }
    cout << endl;
}
#endif


